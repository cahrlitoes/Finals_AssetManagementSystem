#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Finals_AssetManagementSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MAS")]
	public partial class AssetManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblSupplier(tblSupplier instance);
    partial void UpdatetblSupplier(tblSupplier instance);
    partial void DeletetblSupplier(tblSupplier instance);
    partial void InserttblAdmin(tblAdmin instance);
    partial void UpdatetblAdmin(tblAdmin instance);
    partial void DeletetblAdmin(tblAdmin instance);
    partial void InserttblAsset(tblAsset instance);
    partial void UpdatetblAsset(tblAsset instance);
    partial void DeletetblAsset(tblAsset instance);
    partial void InserttblBorrowDetail(tblBorrowDetail instance);
    partial void UpdatetblBorrowDetail(tblBorrowDetail instance);
    partial void DeletetblBorrowDetail(tblBorrowDetail instance);
    partial void InserttblBorrower(tblBorrower instance);
    partial void UpdatetblBorrower(tblBorrower instance);
    partial void DeletetblBorrower(tblBorrower instance);
    partial void InserttblLocation(tblLocation instance);
    partial void UpdatetblLocation(tblLocation instance);
    partial void DeletetblLocation(tblLocation instance);
    partial void InserttblMaintenanceSchedule(tblMaintenanceSchedule instance);
    partial void UpdatetblMaintenanceSchedule(tblMaintenanceSchedule instance);
    partial void DeletetblMaintenanceSchedule(tblMaintenanceSchedule instance);
    partial void InserttblRequestStatus(tblRequestStatus instance);
    partial void UpdatetblRequestStatus(tblRequestStatus instance);
    partial void DeletetblRequestStatus(tblRequestStatus instance);
    #endregion
		
		public AssetManagementDataContext() : 
				base(global::Finals_AssetManagementSystem.Properties.Settings.Default.MASConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AssetManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblSupplier> tblSuppliers
		{
			get
			{
				return this.GetTable<tblSupplier>();
			}
		}
		
		public System.Data.Linq.Table<tblAdmin> tblAdmins
		{
			get
			{
				return this.GetTable<tblAdmin>();
			}
		}
		
		public System.Data.Linq.Table<tblAsset> tblAssets
		{
			get
			{
				return this.GetTable<tblAsset>();
			}
		}
		
		public System.Data.Linq.Table<tblBorrowDetail> tblBorrowDetails
		{
			get
			{
				return this.GetTable<tblBorrowDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblBorrower> tblBorrowers
		{
			get
			{
				return this.GetTable<tblBorrower>();
			}
		}
		
		public System.Data.Linq.Table<tblLocation> tblLocations
		{
			get
			{
				return this.GetTable<tblLocation>();
			}
		}
		
		public System.Data.Linq.Table<tblMaintenanceSchedule> tblMaintenanceSchedules
		{
			get
			{
				return this.GetTable<tblMaintenanceSchedule>();
			}
		}
		
		public System.Data.Linq.Table<tblRequestStatus> tblRequestStatus
		{
			get
			{
				return this.GetTable<tblRequestStatus>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AdminLogin")]
		public ISingleResult<AdminLoginResult> AdminLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdminEmail", DbType="NVarChar(50)")] string adminEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="APW", DbType="NVarChar(50)")] string aPW)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), adminEmail, aPW);
			return ((ISingleResult<AdminLoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BorrowerLogin")]
		public ISingleResult<BorrowerLoginResult> BorrowerLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PW", DbType="NVarChar(50)")] string pW)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, pW);
			return ((ISingleResult<BorrowerLoginResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSupplier")]
	public partial class tblSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _SupplierName;
		
		private string _SupplierNum;
		
		private string _ContactPersonN;
		
		private EntitySet<tblAsset> _tblAssets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierNumChanging(string value);
    partial void OnSupplierNumChanged();
    partial void OnContactPersonNChanging(string value);
    partial void OnContactPersonNChanged();
    #endregion
		
		public tblSupplier()
		{
			this._tblAssets = new EntitySet<tblAsset>(new Action<tblAsset>(this.attach_tblAssets), new Action<tblAsset>(this.detach_tblAssets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierNum
		{
			get
			{
				return this._SupplierNum;
			}
			set
			{
				if ((this._SupplierNum != value))
				{
					this.OnSupplierNumChanging(value);
					this.SendPropertyChanging();
					this._SupplierNum = value;
					this.SendPropertyChanged("SupplierNum");
					this.OnSupplierNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPersonN
		{
			get
			{
				return this._ContactPersonN;
			}
			set
			{
				if ((this._ContactPersonN != value))
				{
					this.OnContactPersonNChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonN = value;
					this.SendPropertyChanged("ContactPersonN");
					this.OnContactPersonNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSupplier_tblAsset", Storage="_tblAssets", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<tblAsset> tblAssets
		{
			get
			{
				return this._tblAssets;
			}
			set
			{
				this._tblAssets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAssets(tblAsset entity)
		{
			this.SendPropertyChanging();
			entity.tblSupplier = this;
		}
		
		private void detach_tblAssets(tblAsset entity)
		{
			this.SendPropertyChanging();
			entity.tblSupplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdmin")]
	public partial class tblAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _AdminFN;
		
		private string _AdminLN;
		
		private string _AdminUN;
		
		private string _AdminPW;
		
		private string _AdminEmail;
		
		private string _AdminNum;
		
		private EntitySet<tblRequestStatus> _tblRequestStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnAdminFNChanging(string value);
    partial void OnAdminFNChanged();
    partial void OnAdminLNChanging(string value);
    partial void OnAdminLNChanged();
    partial void OnAdminUNChanging(string value);
    partial void OnAdminUNChanged();
    partial void OnAdminPWChanging(string value);
    partial void OnAdminPWChanged();
    partial void OnAdminEmailChanging(string value);
    partial void OnAdminEmailChanged();
    partial void OnAdminNumChanging(string value);
    partial void OnAdminNumChanged();
    #endregion
		
		public tblAdmin()
		{
			this._tblRequestStatus = new EntitySet<tblRequestStatus>(new Action<tblRequestStatus>(this.attach_tblRequestStatus), new Action<tblRequestStatus>(this.detach_tblRequestStatus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminFN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminFN
		{
			get
			{
				return this._AdminFN;
			}
			set
			{
				if ((this._AdminFN != value))
				{
					this.OnAdminFNChanging(value);
					this.SendPropertyChanging();
					this._AdminFN = value;
					this.SendPropertyChanged("AdminFN");
					this.OnAdminFNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminLN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminLN
		{
			get
			{
				return this._AdminLN;
			}
			set
			{
				if ((this._AdminLN != value))
				{
					this.OnAdminLNChanging(value);
					this.SendPropertyChanging();
					this._AdminLN = value;
					this.SendPropertyChanged("AdminLN");
					this.OnAdminLNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminUN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminUN
		{
			get
			{
				return this._AdminUN;
			}
			set
			{
				if ((this._AdminUN != value))
				{
					this.OnAdminUNChanging(value);
					this.SendPropertyChanging();
					this._AdminUN = value;
					this.SendPropertyChanged("AdminUN");
					this.OnAdminUNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPW", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminPW
		{
			get
			{
				return this._AdminPW;
			}
			set
			{
				if ((this._AdminPW != value))
				{
					this.OnAdminPWChanging(value);
					this.SendPropertyChanging();
					this._AdminPW = value;
					this.SendPropertyChanged("AdminPW");
					this.OnAdminPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminEmail
		{
			get
			{
				return this._AdminEmail;
			}
			set
			{
				if ((this._AdminEmail != value))
				{
					this.OnAdminEmailChanging(value);
					this.SendPropertyChanging();
					this._AdminEmail = value;
					this.SendPropertyChanged("AdminEmail");
					this.OnAdminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminNum", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string AdminNum
		{
			get
			{
				return this._AdminNum;
			}
			set
			{
				if ((this._AdminNum != value))
				{
					this.OnAdminNumChanging(value);
					this.SendPropertyChanging();
					this._AdminNum = value;
					this.SendPropertyChanged("AdminNum");
					this.OnAdminNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAdmin_tblRequestStatus", Storage="_tblRequestStatus", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<tblRequestStatus> tblRequestStatus
		{
			get
			{
				return this._tblRequestStatus;
			}
			set
			{
				this._tblRequestStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblRequestStatus(tblRequestStatus entity)
		{
			this.SendPropertyChanging();
			entity.tblAdmin = this;
		}
		
		private void detach_tblRequestStatus(tblRequestStatus entity)
		{
			this.SendPropertyChanging();
			entity.tblAdmin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAsset")]
	public partial class tblAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssetID;
		
		private string _AssetName;
		
		private string _AssetCode;
		
		private string _AssetType;
		
		private System.DateTime _AssetPurchaseDate;
		
		private string _AssetStatus;
		
		private int _LocationID;
		
		private int _SupplierID;
		
		private EntitySet<tblBorrowDetail> _tblBorrowDetails;
		
		private EntitySet<tblMaintenanceSchedule> _tblMaintenanceSchedules;
		
		private EntityRef<tblSupplier> _tblSupplier;
		
		private EntityRef<tblLocation> _tblLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetIDChanging(int value);
    partial void OnAssetIDChanged();
    partial void OnAssetNameChanging(string value);
    partial void OnAssetNameChanged();
    partial void OnAssetCodeChanging(string value);
    partial void OnAssetCodeChanged();
    partial void OnAssetTypeChanging(string value);
    partial void OnAssetTypeChanged();
    partial void OnAssetPurchaseDateChanging(System.DateTime value);
    partial void OnAssetPurchaseDateChanged();
    partial void OnAssetStatusChanging(string value);
    partial void OnAssetStatusChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public tblAsset()
		{
			this._tblBorrowDetails = new EntitySet<tblBorrowDetail>(new Action<tblBorrowDetail>(this.attach_tblBorrowDetails), new Action<tblBorrowDetail>(this.detach_tblBorrowDetails));
			this._tblMaintenanceSchedules = new EntitySet<tblMaintenanceSchedule>(new Action<tblMaintenanceSchedule>(this.attach_tblMaintenanceSchedules), new Action<tblMaintenanceSchedule>(this.detach_tblMaintenanceSchedules));
			this._tblSupplier = default(EntityRef<tblSupplier>);
			this._tblLocation = default(EntityRef<tblLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetName
		{
			get
			{
				return this._AssetName;
			}
			set
			{
				if ((this._AssetName != value))
				{
					this.OnAssetNameChanging(value);
					this.SendPropertyChanging();
					this._AssetName = value;
					this.SendPropertyChanged("AssetName");
					this.OnAssetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetCode
		{
			get
			{
				return this._AssetCode;
			}
			set
			{
				if ((this._AssetCode != value))
				{
					this.OnAssetCodeChanging(value);
					this.SendPropertyChanging();
					this._AssetCode = value;
					this.SendPropertyChanged("AssetCode");
					this.OnAssetCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetType
		{
			get
			{
				return this._AssetType;
			}
			set
			{
				if ((this._AssetType != value))
				{
					this.OnAssetTypeChanging(value);
					this.SendPropertyChanging();
					this._AssetType = value;
					this.SendPropertyChanged("AssetType");
					this.OnAssetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetPurchaseDate", DbType="Date NOT NULL")]
		public System.DateTime AssetPurchaseDate
		{
			get
			{
				return this._AssetPurchaseDate;
			}
			set
			{
				if ((this._AssetPurchaseDate != value))
				{
					this.OnAssetPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._AssetPurchaseDate = value;
					this.SendPropertyChanged("AssetPurchaseDate");
					this.OnAssetPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetStatus
		{
			get
			{
				return this._AssetStatus;
			}
			set
			{
				if ((this._AssetStatus != value))
				{
					this.OnAssetStatusChanging(value);
					this.SendPropertyChanging();
					this._AssetStatus = value;
					this.SendPropertyChanged("AssetStatus");
					this.OnAssetStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._tblLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._tblSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAsset_tblBorrowDetail", Storage="_tblBorrowDetails", ThisKey="AssetID", OtherKey="AssetID")]
		public EntitySet<tblBorrowDetail> tblBorrowDetails
		{
			get
			{
				return this._tblBorrowDetails;
			}
			set
			{
				this._tblBorrowDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAsset_tblMaintenanceSchedule", Storage="_tblMaintenanceSchedules", ThisKey="AssetID", OtherKey="AssetID")]
		public EntitySet<tblMaintenanceSchedule> tblMaintenanceSchedules
		{
			get
			{
				return this._tblMaintenanceSchedules;
			}
			set
			{
				this._tblMaintenanceSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSupplier_tblAsset", Storage="_tblSupplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public tblSupplier tblSupplier
		{
			get
			{
				return this._tblSupplier.Entity;
			}
			set
			{
				tblSupplier previousValue = this._tblSupplier.Entity;
				if (((previousValue != value) 
							|| (this._tblSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSupplier.Entity = null;
						previousValue.tblAssets.Remove(this);
					}
					this._tblSupplier.Entity = value;
					if ((value != null))
					{
						value.tblAssets.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("tblSupplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLocation_tblAsset", Storage="_tblLocation", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public tblLocation tblLocation
		{
			get
			{
				return this._tblLocation.Entity;
			}
			set
			{
				tblLocation previousValue = this._tblLocation.Entity;
				if (((previousValue != value) 
							|| (this._tblLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLocation.Entity = null;
						previousValue.tblAssets.Remove(this);
					}
					this._tblLocation.Entity = value;
					if ((value != null))
					{
						value.tblAssets.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("tblLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBorrowDetails(tblBorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblAsset = this;
		}
		
		private void detach_tblBorrowDetails(tblBorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblAsset = null;
		}
		
		private void attach_tblMaintenanceSchedules(tblMaintenanceSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tblAsset = this;
		}
		
		private void detach_tblMaintenanceSchedules(tblMaintenanceSchedule entity)
		{
			this.SendPropertyChanging();
			entity.tblAsset = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBorrowDetails")]
	public partial class tblBorrowDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BorrowDetailsID;
		
		private int _BorrowerID;
		
		private int _AssetID;
		
		private System.DateTime _RequestedOn;
		
		private string _BorrowPurpose;
		
		private System.Nullable<System.DateTime> _BorrowedOn;
		
		private System.DateTime _ReturnBy;
		
		private System.Nullable<System.DateTime> _ReturnedOn;
		
		private EntitySet<tblRequestStatus> _tblRequestStatus;
		
		private EntityRef<tblAsset> _tblAsset;
		
		private EntityRef<tblBorrower> _tblBorrower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBorrowDetailsIDChanging(int value);
    partial void OnBorrowDetailsIDChanged();
    partial void OnBorrowerIDChanging(int value);
    partial void OnBorrowerIDChanged();
    partial void OnAssetIDChanging(int value);
    partial void OnAssetIDChanged();
    partial void OnRequestedOnChanging(System.DateTime value);
    partial void OnRequestedOnChanged();
    partial void OnBorrowPurposeChanging(string value);
    partial void OnBorrowPurposeChanged();
    partial void OnBorrowedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnBorrowedOnChanged();
    partial void OnReturnByChanging(System.DateTime value);
    partial void OnReturnByChanged();
    partial void OnReturnedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnedOnChanged();
    #endregion
		
		public tblBorrowDetail()
		{
			this._tblRequestStatus = new EntitySet<tblRequestStatus>(new Action<tblRequestStatus>(this.attach_tblRequestStatus), new Action<tblRequestStatus>(this.detach_tblRequestStatus));
			this._tblAsset = default(EntityRef<tblAsset>);
			this._tblBorrower = default(EntityRef<tblBorrower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowDetailsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BorrowDetailsID
		{
			get
			{
				return this._BorrowDetailsID;
			}
			set
			{
				if ((this._BorrowDetailsID != value))
				{
					this.OnBorrowDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._BorrowDetailsID = value;
					this.SendPropertyChanged("BorrowDetailsID");
					this.OnBorrowDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerID", DbType="Int NOT NULL")]
		public int BorrowerID
		{
			get
			{
				return this._BorrowerID;
			}
			set
			{
				if ((this._BorrowerID != value))
				{
					if (this._tblBorrower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBorrowerIDChanging(value);
					this.SendPropertyChanging();
					this._BorrowerID = value;
					this.SendPropertyChanged("BorrowerID");
					this.OnBorrowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="Int NOT NULL")]
		public int AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					if (this._tblAsset.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedOn", DbType="DateTime NOT NULL")]
		public System.DateTime RequestedOn
		{
			get
			{
				return this._RequestedOn;
			}
			set
			{
				if ((this._RequestedOn != value))
				{
					this.OnRequestedOnChanging(value);
					this.SendPropertyChanging();
					this._RequestedOn = value;
					this.SendPropertyChanged("RequestedOn");
					this.OnRequestedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowPurpose", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BorrowPurpose
		{
			get
			{
				return this._BorrowPurpose;
			}
			set
			{
				if ((this._BorrowPurpose != value))
				{
					this.OnBorrowPurposeChanging(value);
					this.SendPropertyChanging();
					this._BorrowPurpose = value;
					this.SendPropertyChanged("BorrowPurpose");
					this.OnBorrowPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> BorrowedOn
		{
			get
			{
				return this._BorrowedOn;
			}
			set
			{
				if ((this._BorrowedOn != value))
				{
					this.OnBorrowedOnChanging(value);
					this.SendPropertyChanging();
					this._BorrowedOn = value;
					this.SendPropertyChanged("BorrowedOn");
					this.OnBorrowedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnBy", DbType="Date NOT NULL")]
		public System.DateTime ReturnBy
		{
			get
			{
				return this._ReturnBy;
			}
			set
			{
				if ((this._ReturnBy != value))
				{
					this.OnReturnByChanging(value);
					this.SendPropertyChanging();
					this._ReturnBy = value;
					this.SendPropertyChanged("ReturnBy");
					this.OnReturnByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnedOn
		{
			get
			{
				return this._ReturnedOn;
			}
			set
			{
				if ((this._ReturnedOn != value))
				{
					this.OnReturnedOnChanging(value);
					this.SendPropertyChanging();
					this._ReturnedOn = value;
					this.SendPropertyChanged("ReturnedOn");
					this.OnReturnedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBorrowDetail_tblRequestStatus", Storage="_tblRequestStatus", ThisKey="BorrowDetailsID", OtherKey="BorrowDetailsID")]
		public EntitySet<tblRequestStatus> tblRequestStatus
		{
			get
			{
				return this._tblRequestStatus;
			}
			set
			{
				this._tblRequestStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAsset_tblBorrowDetail", Storage="_tblAsset", ThisKey="AssetID", OtherKey="AssetID", IsForeignKey=true)]
		public tblAsset tblAsset
		{
			get
			{
				return this._tblAsset.Entity;
			}
			set
			{
				tblAsset previousValue = this._tblAsset.Entity;
				if (((previousValue != value) 
							|| (this._tblAsset.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAsset.Entity = null;
						previousValue.tblBorrowDetails.Remove(this);
					}
					this._tblAsset.Entity = value;
					if ((value != null))
					{
						value.tblBorrowDetails.Add(this);
						this._AssetID = value.AssetID;
					}
					else
					{
						this._AssetID = default(int);
					}
					this.SendPropertyChanged("tblAsset");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBorrower_tblBorrowDetail", Storage="_tblBorrower", ThisKey="BorrowerID", OtherKey="BorrowerID", IsForeignKey=true)]
		public tblBorrower tblBorrower
		{
			get
			{
				return this._tblBorrower.Entity;
			}
			set
			{
				tblBorrower previousValue = this._tblBorrower.Entity;
				if (((previousValue != value) 
							|| (this._tblBorrower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBorrower.Entity = null;
						previousValue.tblBorrowDetails.Remove(this);
					}
					this._tblBorrower.Entity = value;
					if ((value != null))
					{
						value.tblBorrowDetails.Add(this);
						this._BorrowerID = value.BorrowerID;
					}
					else
					{
						this._BorrowerID = default(int);
					}
					this.SendPropertyChanged("tblBorrower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblRequestStatus(tblRequestStatus entity)
		{
			this.SendPropertyChanging();
			entity.tblBorrowDetail = this;
		}
		
		private void detach_tblRequestStatus(tblRequestStatus entity)
		{
			this.SendPropertyChanging();
			entity.tblBorrowDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBorrower")]
	public partial class tblBorrower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BorrowerID;
		
		private string _BorrowerFN;
		
		private string _BorrowerLN;
		
		private string _BorrowerType;
		
		private string _BorrowerUN;
		
		private string _BorrowerPW;
		
		private string _BorrowerEmail;
		
		private string _BorrowerNum;
		
		private EntitySet<tblBorrowDetail> _tblBorrowDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBorrowerIDChanging(int value);
    partial void OnBorrowerIDChanged();
    partial void OnBorrowerFNChanging(string value);
    partial void OnBorrowerFNChanged();
    partial void OnBorrowerLNChanging(string value);
    partial void OnBorrowerLNChanged();
    partial void OnBorrowerTypeChanging(string value);
    partial void OnBorrowerTypeChanged();
    partial void OnBorrowerUNChanging(string value);
    partial void OnBorrowerUNChanged();
    partial void OnBorrowerPWChanging(string value);
    partial void OnBorrowerPWChanged();
    partial void OnBorrowerEmailChanging(string value);
    partial void OnBorrowerEmailChanged();
    partial void OnBorrowerNumChanging(string value);
    partial void OnBorrowerNumChanged();
    #endregion
		
		public tblBorrower()
		{
			this._tblBorrowDetails = new EntitySet<tblBorrowDetail>(new Action<tblBorrowDetail>(this.attach_tblBorrowDetails), new Action<tblBorrowDetail>(this.detach_tblBorrowDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BorrowerID
		{
			get
			{
				return this._BorrowerID;
			}
			set
			{
				if ((this._BorrowerID != value))
				{
					this.OnBorrowerIDChanging(value);
					this.SendPropertyChanging();
					this._BorrowerID = value;
					this.SendPropertyChanged("BorrowerID");
					this.OnBorrowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerFN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerFN
		{
			get
			{
				return this._BorrowerFN;
			}
			set
			{
				if ((this._BorrowerFN != value))
				{
					this.OnBorrowerFNChanging(value);
					this.SendPropertyChanging();
					this._BorrowerFN = value;
					this.SendPropertyChanged("BorrowerFN");
					this.OnBorrowerFNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerLN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerLN
		{
			get
			{
				return this._BorrowerLN;
			}
			set
			{
				if ((this._BorrowerLN != value))
				{
					this.OnBorrowerLNChanging(value);
					this.SendPropertyChanging();
					this._BorrowerLN = value;
					this.SendPropertyChanged("BorrowerLN");
					this.OnBorrowerLNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerType
		{
			get
			{
				return this._BorrowerType;
			}
			set
			{
				if ((this._BorrowerType != value))
				{
					this.OnBorrowerTypeChanging(value);
					this.SendPropertyChanging();
					this._BorrowerType = value;
					this.SendPropertyChanged("BorrowerType");
					this.OnBorrowerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerUN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerUN
		{
			get
			{
				return this._BorrowerUN;
			}
			set
			{
				if ((this._BorrowerUN != value))
				{
					this.OnBorrowerUNChanging(value);
					this.SendPropertyChanging();
					this._BorrowerUN = value;
					this.SendPropertyChanged("BorrowerUN");
					this.OnBorrowerUNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerPW", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerPW
		{
			get
			{
				return this._BorrowerPW;
			}
			set
			{
				if ((this._BorrowerPW != value))
				{
					this.OnBorrowerPWChanging(value);
					this.SendPropertyChanging();
					this._BorrowerPW = value;
					this.SendPropertyChanged("BorrowerPW");
					this.OnBorrowerPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerEmail
		{
			get
			{
				return this._BorrowerEmail;
			}
			set
			{
				if ((this._BorrowerEmail != value))
				{
					this.OnBorrowerEmailChanging(value);
					this.SendPropertyChanging();
					this._BorrowerEmail = value;
					this.SendPropertyChanged("BorrowerEmail");
					this.OnBorrowerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerNum", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string BorrowerNum
		{
			get
			{
				return this._BorrowerNum;
			}
			set
			{
				if ((this._BorrowerNum != value))
				{
					this.OnBorrowerNumChanging(value);
					this.SendPropertyChanging();
					this._BorrowerNum = value;
					this.SendPropertyChanged("BorrowerNum");
					this.OnBorrowerNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBorrower_tblBorrowDetail", Storage="_tblBorrowDetails", ThisKey="BorrowerID", OtherKey="BorrowerID")]
		public EntitySet<tblBorrowDetail> tblBorrowDetails
		{
			get
			{
				return this._tblBorrowDetails;
			}
			set
			{
				this._tblBorrowDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBorrowDetails(tblBorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblBorrower = this;
		}
		
		private void detach_tblBorrowDetails(tblBorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblBorrower = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLocation")]
	public partial class tblLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private int _RoomNo;
		
		private int _FloorNo;
		
		private string _BldgName;
		
		private EntitySet<tblAsset> _tblAssets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnRoomNoChanging(int value);
    partial void OnRoomNoChanged();
    partial void OnFloorNoChanging(int value);
    partial void OnFloorNoChanged();
    partial void OnBldgNameChanging(string value);
    partial void OnBldgNameChanged();
    #endregion
		
		public tblLocation()
		{
			this._tblAssets = new EntitySet<tblAsset>(new Action<tblAsset>(this.attach_tblAssets), new Action<tblAsset>(this.detach_tblAssets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNo", DbType="Int NOT NULL")]
		public int RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorNo", DbType="Int NOT NULL")]
		public int FloorNo
		{
			get
			{
				return this._FloorNo;
			}
			set
			{
				if ((this._FloorNo != value))
				{
					this.OnFloorNoChanging(value);
					this.SendPropertyChanging();
					this._FloorNo = value;
					this.SendPropertyChanged("FloorNo");
					this.OnFloorNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BldgName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BldgName
		{
			get
			{
				return this._BldgName;
			}
			set
			{
				if ((this._BldgName != value))
				{
					this.OnBldgNameChanging(value);
					this.SendPropertyChanging();
					this._BldgName = value;
					this.SendPropertyChanged("BldgName");
					this.OnBldgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLocation_tblAsset", Storage="_tblAssets", ThisKey="LocationID", OtherKey="LocationID")]
		public EntitySet<tblAsset> tblAssets
		{
			get
			{
				return this._tblAssets;
			}
			set
			{
				this._tblAssets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAssets(tblAsset entity)
		{
			this.SendPropertyChanging();
			entity.tblLocation = this;
		}
		
		private void detach_tblAssets(tblAsset entity)
		{
			this.SendPropertyChanging();
			entity.tblLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMaintenanceSchedule")]
	public partial class tblMaintenanceSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaintScheduleID;
		
		private int _AssetID;
		
		private System.Nullable<System.DateTime> _LastMaintDate;
		
		private System.Nullable<int> _MaintCycle;
		
		private string _MaintType;
		
		private string _MaintDesc;
		
		private EntityRef<tblAsset> _tblAsset;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaintScheduleIDChanging(int value);
    partial void OnMaintScheduleIDChanged();
    partial void OnAssetIDChanging(int value);
    partial void OnAssetIDChanged();
    partial void OnLastMaintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMaintDateChanged();
    partial void OnMaintCycleChanging(System.Nullable<int> value);
    partial void OnMaintCycleChanged();
    partial void OnMaintTypeChanging(string value);
    partial void OnMaintTypeChanged();
    partial void OnMaintDescChanging(string value);
    partial void OnMaintDescChanged();
    #endregion
		
		public tblMaintenanceSchedule()
		{
			this._tblAsset = default(EntityRef<tblAsset>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaintScheduleID
		{
			get
			{
				return this._MaintScheduleID;
			}
			set
			{
				if ((this._MaintScheduleID != value))
				{
					this.OnMaintScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._MaintScheduleID = value;
					this.SendPropertyChanged("MaintScheduleID");
					this.OnMaintScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="Int NOT NULL")]
		public int AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					if (this._tblAsset.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMaintDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastMaintDate
		{
			get
			{
				return this._LastMaintDate;
			}
			set
			{
				if ((this._LastMaintDate != value))
				{
					this.OnLastMaintDateChanging(value);
					this.SendPropertyChanging();
					this._LastMaintDate = value;
					this.SendPropertyChanged("LastMaintDate");
					this.OnLastMaintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintCycle", DbType="Int")]
		public System.Nullable<int> MaintCycle
		{
			get
			{
				return this._MaintCycle;
			}
			set
			{
				if ((this._MaintCycle != value))
				{
					this.OnMaintCycleChanging(value);
					this.SendPropertyChanging();
					this._MaintCycle = value;
					this.SendPropertyChanged("MaintCycle");
					this.OnMaintCycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintType", DbType="NVarChar(100)")]
		public string MaintType
		{
			get
			{
				return this._MaintType;
			}
			set
			{
				if ((this._MaintType != value))
				{
					this.OnMaintTypeChanging(value);
					this.SendPropertyChanging();
					this._MaintType = value;
					this.SendPropertyChanged("MaintType");
					this.OnMaintTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintDesc", DbType="NVarChar(100)")]
		public string MaintDesc
		{
			get
			{
				return this._MaintDesc;
			}
			set
			{
				if ((this._MaintDesc != value))
				{
					this.OnMaintDescChanging(value);
					this.SendPropertyChanging();
					this._MaintDesc = value;
					this.SendPropertyChanged("MaintDesc");
					this.OnMaintDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAsset_tblMaintenanceSchedule", Storage="_tblAsset", ThisKey="AssetID", OtherKey="AssetID", IsForeignKey=true)]
		public tblAsset tblAsset
		{
			get
			{
				return this._tblAsset.Entity;
			}
			set
			{
				tblAsset previousValue = this._tblAsset.Entity;
				if (((previousValue != value) 
							|| (this._tblAsset.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAsset.Entity = null;
						previousValue.tblMaintenanceSchedules.Remove(this);
					}
					this._tblAsset.Entity = value;
					if ((value != null))
					{
						value.tblMaintenanceSchedules.Add(this);
						this._AssetID = value.AssetID;
					}
					else
					{
						this._AssetID = default(int);
					}
					this.SendPropertyChanged("tblAsset");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRequestStatus")]
	public partial class tblRequestStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReqStatusID;
		
		private int _BorrowDetailsID;
		
		private System.Nullable<int> _AdminID;
		
		private EntityRef<tblAdmin> _tblAdmin;
		
		private EntityRef<tblBorrowDetail> _tblBorrowDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReqStatusIDChanging(int value);
    partial void OnReqStatusIDChanged();
    partial void OnBorrowDetailsIDChanging(int value);
    partial void OnBorrowDetailsIDChanged();
    partial void OnAdminIDChanging(System.Nullable<int> value);
    partial void OnAdminIDChanged();
    #endregion
		
		public tblRequestStatus()
		{
			this._tblAdmin = default(EntityRef<tblAdmin>);
			this._tblBorrowDetail = default(EntityRef<tblBorrowDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReqStatusID
		{
			get
			{
				return this._ReqStatusID;
			}
			set
			{
				if ((this._ReqStatusID != value))
				{
					this.OnReqStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ReqStatusID = value;
					this.SendPropertyChanged("ReqStatusID");
					this.OnReqStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowDetailsID", DbType="Int NOT NULL")]
		public int BorrowDetailsID
		{
			get
			{
				return this._BorrowDetailsID;
			}
			set
			{
				if ((this._BorrowDetailsID != value))
				{
					if (this._tblBorrowDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBorrowDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._BorrowDetailsID = value;
					this.SendPropertyChanged("BorrowDetailsID");
					this.OnBorrowDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int")]
		public System.Nullable<int> AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._tblAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAdmin_tblRequestStatus", Storage="_tblAdmin", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public tblAdmin tblAdmin
		{
			get
			{
				return this._tblAdmin.Entity;
			}
			set
			{
				tblAdmin previousValue = this._tblAdmin.Entity;
				if (((previousValue != value) 
							|| (this._tblAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAdmin.Entity = null;
						previousValue.tblRequestStatus.Remove(this);
					}
					this._tblAdmin.Entity = value;
					if ((value != null))
					{
						value.tblRequestStatus.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblAdmin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBorrowDetail_tblRequestStatus", Storage="_tblBorrowDetail", ThisKey="BorrowDetailsID", OtherKey="BorrowDetailsID", IsForeignKey=true)]
		public tblBorrowDetail tblBorrowDetail
		{
			get
			{
				return this._tblBorrowDetail.Entity;
			}
			set
			{
				tblBorrowDetail previousValue = this._tblBorrowDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblBorrowDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBorrowDetail.Entity = null;
						previousValue.tblRequestStatus.Remove(this);
					}
					this._tblBorrowDetail.Entity = value;
					if ((value != null))
					{
						value.tblRequestStatus.Add(this);
						this._BorrowDetailsID = value.BorrowDetailsID;
					}
					else
					{
						this._BorrowDetailsID = default(int);
					}
					this.SendPropertyChanged("tblBorrowDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AdminLoginResult
	{
		
		private string _AdminUN;
		
		public AdminLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminUN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AdminUN
		{
			get
			{
				return this._AdminUN;
			}
			set
			{
				if ((this._AdminUN != value))
				{
					this._AdminUN = value;
				}
			}
		}
	}
	
	public partial class BorrowerLoginResult
	{
		
		private string _BorrowerUN;
		
		public BorrowerLoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerUN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowerUN
		{
			get
			{
				return this._BorrowerUN;
			}
			set
			{
				if ((this._BorrowerUN != value))
				{
					this._BorrowerUN = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
